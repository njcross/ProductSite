server {
    server_name myplaytray.com www.myplaytray.com;

    root /var/www/react;
    index index.html;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/react;
    }

    location /api {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers (for preflight + actual requests)
        add_header Access-Control-Allow-Origin "https://www.myplaytray.com" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, Credentials" always;


        # Handle preflight (OPTIONS) requests directly
        if ($request_method = OPTIONS ) {
            return 204;
        }
    }


    location / {
        try_files $uri /index.html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/myplaytray.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/myplaytray.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot




}

server {
    if ($host = www.myplaytray.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = myplaytray.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name myplaytray.com www.myplaytray.com;
    return 404; # managed by Certbot



